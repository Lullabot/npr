<?php

/**
 * Implements hook_permission().
 */
function npr_api_pull_permission() {
  return array(
    'pull NPR content' => array(
      'title' => t('Pull NPR content'),
      'description' => t('Pull NPR content to create local nodes on the site.'),
    ),
  );
}

/**
 * Implements hook_node_info().
 */
function npr_api_pull_node_info() {
  return array(
    'npr_story' => array(
      'name' => t('NPR Story'),
      'base' => 'npr_story',
      'description' => t('NPR Story.'),
      'locked' => TRUE,
      'title_label' => 'Headline',
    ),
  );
}

/**
 * Implements hook_form().
 */
function npr_story_form($node, $form_state) {
  return node_content_form($node, $form_state);
}

/**
 * Implements hook_menu().
 */
function npr_api_pull_menu() {
  $items = array();

  $items['admin/content/npr'] = array(
    'title' => 'Single Story Pull',
    'description' => 'Pull a single story from the NPR API.',
    'access arguments' => array('pull NPR content'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('npr_api_pull_get_story'),
    'file' => 'npr_api_pull.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/services/npr/cron'] = array(
    'title' => 'Cron settings',
    'description' => 'Fetch the following types of stories from NPR at every cron.',
    'access arguments' => array('administer npr api'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('npr_api_pull_cron_config'),
    'file' => 'npr_api_pull.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Implements hook_cron().
 */
function npr_api_pull_cron() {
  pi_api_pull_pull_stories();
}

/**
 * Pulls NPR stories (according to config settings).
 */
function pi_api_pull_pull_stories() {
  $ids = variable_get('npr_api_pull_cron_query_ids', array());
  $today = format_date(REQUEST_TIME, 'custom', 'Y-m-d');
  foreach ($ids as $id) {
    if ($id) {
      $params = array(
        'id' => $id,
        'startDate' => $today,
      );
      $NPR = npr_api_fetch_object($params);
      if (!empty($NPR->stories)) {
        foreach ($NPR->stories as $story) {
          npr_api_pull_insert_story($story);
        }
      }
    }
  }
}

/**
 * Creates a new npr_story node from NPRMLEntity object
 */
function npr_api_pull_insert_story($story, $date_flag = 0) {
  if (!npr_api_pull_story_exists($story->id)) {
    npr_api_pull_save_story($story, $date_flag);
  }
  else {
    // TODO :: add updating
    // using the date modified field from API
    // npr_api_pull_update_story($story, $date_flag, TRUE);
    drupal_set_message(t("Story with ID=@id  already exists.", array('@id' => $story->id)));
  }
}

/**
 * Determines if a npr_story node with a certain npr_id already exists
 */
function npr_api_pull_story_exists($npr_id) {
  return npr_api_pull_get_nid_from_story_id($npr_id) > 0;
}

/**
 * Given an npr_id, finds a matching nid
 */
function npr_api_pull_get_nid_from_story_id($npr_id) {
  $query = new EntityFieldQuery;
  $result = $query
    ->entityCondition('entity_type', 'node')
    ->entityCondition('bundle', 'npr_story')
    ->fieldCondition('field_npr_id', 'value', $npr_id, '=')
    ->execute();
  if (!empty($result['node'])) {
    $node = array_shift($result['node']);
    return $node->nid;
  }
}

/**
 * Converts an NPRMLEntity story object into a node object
 * and saves it to the DB (via form submit)
 */
function npr_api_pull_save_story($story, $date_flag = 0) {
  /*
  TODO:
  plain text?
  text_with_html
  teaser
  mini_teaser -- create in object, but don't use
  story_link -- different from link?
  mod_date -- use for updates
  byline_name ?
  bylines ?
  link = OK
  images -- this SEEMS straightforward
  slug
  $org_data -- doesn't hurt to save this
  $transcript - maybe punt on this
  audio -- this'll be interesting
  */
  module_load_include('inc', 'node', 'node.pages');
  if ($date_flag == 0) {
    $pub_date = REQUEST_TIME;
  }
  else {
    $pub_date = strtotime($story->pubDate->value);
  }

  $node = new stdClass();
  $form_state = array();

  $node = array(
    'type' => 'npr_story',
    'nid' => NULL,
    'status' => 1,
    'language' => LANGUAGE_NONE,
    'created' => $pub_date,
  );

  $form_state['values']['title'] = $story->title->value;
  $form_state['values']['field_npr_id']['und'][0]['value'] = $story->id;
  
  // Very temp fix, move this up to Drupal class
  $body = '';
  foreach ($story->textWithHtml->paragraphs as $paragraph) {
    $body = $body . '<p>' . $paragraph->value . '</p>';
  }

  $form_state['values']['body']['und'][0]['value'] = $body;

  $form_state['values']['op'] = t('Save');
  drupal_form_submit('npr_story_node_form', $form_state, (object)$node);
}