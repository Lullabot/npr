<?php

/**
 * @file
 * Creates basic calls to NPR API; creates and parses NPR's flavor of XML (NPRML).
 */

use Drupal\npr_api\NprClient;

/**
 * Returns a nested array of info about all NPRML "fields".
 *
 * @return
 *   An array of all NPRML "fields".
 */
function npr_api_get_nprml_fields() {
  $nprml_fields = array(
    'id' => array(
      'type' => 'attribute',
      'accepted_types' => array('text (plain)'),
      'description' => t('A unique identifier for the content.')
    ),
    'subtitle' => array(
      'type' => 'text',
      'accepted_types' => array('Text (plain)'),
      'description' => t('A short, sentence-like description of the returned story.')
    ),
    'shortTitle' => array(
      'type' => 'text',
      'accepted_types' => array('Text (plain)'),
      'description' => t('An abbreviated title for the returned story, not to exceed 30 characters.')
    ),
    'miniTeaser' => array(
      'type' => 'text',
      'accepted_types' => array('Text (plain)'),
      'description' => t('An abbreviated abstract for the returned story, describing what the story is about.')
    ),
    'slug' => array(
      'type' => 'text',
      'accepted_types' => array('Text (plain)'),
      'description' => t('A short phrase or title used to indicate the story content.')
    ),
    'image' => array(
      'type' => 'image',
      'accepted_types' => array('Entity reference (image)'),
      'description' => t('An image related to the content.')
    ),
    'audio' => array(
      'type' => 'audio',
      'accepted_types' => array('Entity reference (audio)'),
      'description' => t('An audio file related to the content.')
    ),
  );
  return $nprml_fields;
}

/**
 * Creates an NprClient object, narrowed by query-type parameters.
 *
 * @param $params
 *   An array of query-type parameters.
 *
 * @return
 *   An NPRAPIDrupal object.
 */

function npr_api_fetch_object($params) {

  // Create a new NprClient with the default configuration.
  $defaults = NprClient::getDefaultConfiguration();
  // TODO. This is not cool at all.
  $client = new NprClient(new \GuzzleHttp\Client($defaults), \Drupal::entityManager(), \Drupal::configFactory(), \Drupal::currentUser(), \Drupal::messenger());

  // Make a request.
  $client->getXmlStories($params);
  $client->parse();

  return $client;
}
